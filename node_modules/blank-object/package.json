{
  "_args": [
    [
      {
        "raw": "blank-object@https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
        "scope": null,
        "escapedName": "blank-object",
        "name": "blank-object",
        "rawSpec": "https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
        "type": "remote"
      },
      "/home/chrx/web-development/employee-forms-app/client"
    ]
  ],
  "_from": "blank-object@>=1.0.1 <2.0.0",
  "_id": "blank-object@1.0.2",
  "_inCache": true,
  "_location": "/blank-object",
  "_phantomChildren": {},
  "_requested": {
    "raw": "blank-object@https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
    "scope": null,
    "escapedName": "blank-object",
    "name": "blank-object",
    "rawSpec": "https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/broccoli-funnel",
    "/broccoli-persistent-filter",
    "/fast-ordered-set"
  ],
  "_resolved": "https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
  "_shasum": "f990793fbe9a8c8dd013fb3219420bec81d5f4b9",
  "_shrinkwrap": null,
  "_spec": "blank-object@https://registry.npmjs.org/blank-object/-/blank-object-1.0.2.tgz",
  "_where": "/home/chrx/web-development/employee-forms-app/client",
  "author": {
    "name": "Stefan Penner"
  },
  "bugs": {
    "url": "https://github.com/stefanpenner/blank-object/issues"
  },
  "dependencies": {},
  "description": "A faster alternative to Object.create(null)",
  "devDependencies": {
    "rollup": "^0.15.0"
  },
  "files": [
    "index.js",
    "lib/index.js"
  ],
  "homepage": "https://github.com/stefanpenner/blank-object#readme",
  "jsnext:main": "lib/index.js",
  "license": "MIT",
  "main": "index.js",
  "name": "blank-object",
  "optionalDependencies": {},
  "readme": "# blank-object\n\nObject.create(null) turns out to be quite slow to alloc in v8, but instead if\nwe inherit from an ancestory with `proto = create(null)` we have nearly\nthe same functionallity but with dramatically faster alloc.\n\n```js\nvar BlankObject = require('blank-object');\n\nvar bo = new BlankObject();\n```\n\nThis is designed for a presence check `map[key] !== undefined` since `in` is also slow like `hasOwnProperty`, `delete` and `Object.create`.\n\n```js\nfunction UNDEFINED() {}\nexport default class Map {\n  constructor() {\n    this.store = new BlankObject();\n  }\n\n  has(key) {\n    return this.store[key] !== undefined;\n  }\n\n  get(key) {\n    let val = this.store[key];\n    return val === UNDEFINED ? undefined : val;\n  }\n\n  set(key, val) {\n    this.store[key] = val === undefined ? UNDEFINED : val;\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stefanpenner/blank-object.git"
  },
  "scripts": {
    "build": "rollup -f umd -n BlankObject -o index.js lib/index.js",
    "prepublish": "npm run build",
    "test": "node test"
  },
  "version": "1.0.2"
}
